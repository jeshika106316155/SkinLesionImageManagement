@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = null;
}
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>Skin Lesion Finding</title>
    <link href="/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
    <link href="/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
    @*<link href="/css/SkinLesionFinding.css" rel="stylesheet" />*@
    <link href="/css/reportCreator.css" rel="stylesheet" />

</head>

<body >
    <div id="liveAlertPlaceholder"></div>

    <div class="header">
        <h1 style="color: gold;align:center">Skin Lesion Finding</h1>
    </div>
    <div class="basicInformation">
        <form id="skinlesionfindingform">
        <table align="center" class="table" style="color: wheat;width:80%;background-color: #4a4947;margin-top: 20px;border: none;">
            <thead>
            <th>Skin Information</th>
            </thead>
            <tr>
                <td colspan="2" class="td-right-none" >Skin type <font color="red">*</font></td>
                    <td colspan="2" class="td-left-none">: <select id="skin_type"></select></td>
                <td class="td-right-none">Personal Hx melanoma<font color="red">*</font></td>
                    <td class="td-left-none">: <select id="PersonalHxmelanoma">
                            <option value="true">true</option>
                            <option value="false">false</option>
                </select></td>
                <td class="td-right-none">Family Hx melanoma<font color="red">*</font></td>
                <td class="td-left-none">: <select id="FamilyHxmelanoma">
                            <option value="true">true</option>
                            <option value="false">false</option>
                </select></td>
            </tr>
            <thead>
        </table>
        <table align="center" class="table" style="color: wheat;width:80%;background-color: #4a4947;margin-top: 20px;border: none;">
            <thead>
            <th>Lesion Information</th>
            </thead>
            <tr>
                <td colspan="2" class="td-right-none">Location <font color="red">*</font></td>
                    <td colspan="2" class="td-left-none">: <select id="Location"></select></td>
                    <td class="td-right-none td-left-none">: Length <input type="number" id="skinlesion_length" /> mm</td>
                    <td class="td-right-none td-left-none"> Width <input type="number" id="skinlesion_width" /> mm</td>
                    <td class="td-left-none"> Depth <input type="number" id="skinlesion_depth" /> mm</td>
            </tr>
            <tr>
                    <td class="td-right-none">Arrangement <font color="red">*</font></td>
                    <td class="td-left-none">: <select id="skinlesion_arrangement"></select></td>
                <td class="td-right-none">Border<font color="red">*</font></td>
                    <td class="td-left-none">: <select id="skinlesion_border"></select></td>
                <td class="td-right-none">Color <font color="red">*</font></td>
                    <td class="td-left-none">: <select id="skinlesion_color"></select></td>
                <td class="td-right-none">Evolution <font color="red">*</font></td>
                    <td class="td-left-none">
                        : <select id="skinlesion_evolution">
                            <option value="true">true</option>
                            <option value="false">false</option>
                </select></td>
            </tr>
                <tr>
                <td colspan="2" class="td-right-none">Primary morphology <font color="red">*</font></td>
                    <td colspan="2" class="td-left-none">: <select id="skinlesion_primarymorphology"></select></td>
                <td colspan="2" class="td-right-none">Secondary change<font color="red">*</font></td>
                    <td colspan="2" class="td-left-none">: <select id="skinlesion_secondarychange"></select></td>
            </tr>
                <tr>
                <td class="td-right-none">Size<font color="red">*</font></td>
                <td colspan="2" class="td-right-none">Shape & configuration<font color="red">*</font></td>
                    <td colspan="2" class="td-left-none">: <select id="skinlesion_shapeconfiguration"></select></td>
                <td colspan="2" class="td-right-none">Reaction pattern<font color="red">*</font></td>
                    <td colspan="2" class="td-left-none">: <select id="skinlesion_reactionpattern"></select></td>
            </tr>
            <tr><td colspan="8" align="right"><input type="button" style="align-self:self-end" class="btn btn-success" value="Submit" onClick="create_finding()"></td></tr>
        </table>
        </form>
    </div>
    <div class="panel-heading">
        <h1>@ViewBag.Title</h1>
    </div>

    <script src="/webcamjs/webcam.js"></script>
    <script src="/lib/jquery/dist/jquery.min.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.min.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="/lib/jquery/dist/jquery.min.js"></script>
    <script language="JavaScript">
        initiate();
        function initiate() {
            var skintypearray = JSON.parse(@Json.Serialize(@ViewBag.skintype));
            var skintypedropdown = document.getElementById("skin_type");
            var bodysitearray = JSON.parse(@Json.Serialize(@ViewBag.bodysite));
            var bodysitedropdown = document.getElementById("Location"); 
            var arrangementarray = JSON.parse(@Json.Serialize(@ViewBag.arrangement));
            var arrangementdropdown = document.getElementById("skinlesion_arrangement");
            var borderarray = JSON.parse(@Json.Serialize(@ViewBag.border));
            var borderdropdown = document.getElementById("skinlesion_border");
            var colorarray = JSON.parse(@Json.Serialize(@ViewBag.color));
            var colordropdown = document.getElementById("skinlesion_color");
            var primarymorphologyarray = JSON.parse(@Json.Serialize(@ViewBag.primarymorphology));
            var primarymorphologydropdown = document.getElementById("skinlesion_primarymorphology");
            var secondarychangearray = JSON.parse(@Json.Serialize(@ViewBag.secondarychange));
            var secondarychangedropdown = document.getElementById("skinlesion_secondarychange");
            var shapeconfigurationarray = JSON.parse(@Json.Serialize(@ViewBag.shapeconfiguration));
            var shapeconfigurationdropdown = document.getElementById("skinlesion_shapeconfiguration");
            var reactionpatternarray = JSON.parse(@Json.Serialize(@ViewBag.reactionpattern));
            var reactionpatterndropdown = document.getElementById("skinlesion_reactionpattern");
            for (var i = 0; i < bodysitearray.length; i++) {

                if (skintypearray[i]!=undefined) {
                    skintypedropdown.appendChild(option = document.createElement("option"));
                    option.value = skintypearray[i]["code"];
                    option.text = skintypearray[i]["display"];
                }
                if (bodysitearray[i] != undefined) {
                    bodysitedropdown.appendChild(option = document.createElement("option"));
                    option.value = bodysitearray[i]["code"];
                    option.text = bodysitearray[i]["display"];
                }
                if (arrangementarray[i] != undefined) {
                    arrangementdropdown.appendChild(option = document.createElement("option"));
                    option.value = arrangementarray[i]["code"];
                    option.text = arrangementarray[i]["display"];
                }
                if (borderarray[i] != undefined) {
                    borderdropdown.appendChild(option = document.createElement("option"));
                    option.value = borderarray[i]["code"];
                    option.text = borderarray[i]["display"];
                }
                if (colorarray[i] != undefined) {
                    colordropdown.appendChild(option = document.createElement("option"));
                    option.value = colorarray[i]["code"];
                    option.text = colorarray[i]["display"];
                }
                if (primarymorphologyarray [i] != undefined) {
                    primarymorphologydropdown.appendChild(option = document.createElement("option"));
                    option.value = primarymorphologyarray[i]["code"];
                    option.text = primarymorphologyarray[i]["display"];
                }
                if (secondarychangearray[i] != undefined) {
                    secondarychangedropdown.appendChild(option = document.createElement("option"));
                    option.value = secondarychangearray[i]["code"];
                    option.text = secondarychangearray[i]["display"];
                }
                if (shapeconfigurationarray[i] != undefined) {
                    shapeconfigurationdropdown.appendChild(option = document.createElement("option"));
                    option.value = shapeconfigurationarray[i]["code"];
                    option.text = shapeconfigurationarray[i]["display"];
                }
                if (reactionpatternarray[i] != undefined) {
                    reactionpatterndropdown.appendChild(option = document.createElement("option"));
                    option.value = reactionpatternarray[i]["code"];
                    option.text = reactionpatternarray[i]["display"];
                }
            }
            if (JSON.parse(@Json.Serialize(@ViewBag.viewFinding)) ) {
                var skinlesion_length = document.getElementById("skinlesion_length");
                var skinlesion_width = document.getElementById("skinlesion_width");
                var skinlesion_depth = document.getElementById("skinlesion_depth"); 
                var dropdowns = [skintypedropdown, bodysitedropdown, arrangementdropdown, borderdropdown, colordropdown, primarymorphologydropdown, secondarychangedropdown, shapeconfigurationdropdown, reactionpatterndropdown, skinlesion_length, skinlesion_width, skinlesion_depth];
                var components = JSON.parse(@Json.Serialize(@ViewBag.components)); 
                dropdowns.forEach(dropdown => {
                    dropdown.value = components[(dropdown.id).replace('_', '.')];
                });
            }
        }
        function create_finding(){
            //check("skinlesionfindingform");
            var elements = document.getElementById("skinlesionfindingform").elements;
            if(elements.length!=16){
                alertfunc("please fill up all the field!", "danger");
                return;
            }
            var findingInfo = {};
            for (var i = 0; i < elements.length; i++) {
                var item = elements.item(i);
                findingInfo[item.id] = item.value;
            }
            findingInfo["lesionname"] = (new URLSearchParams(document.location.search)).get('lesionname');
            if (JSON.parse(@Json.Serialize(@ViewBag.viewFinding))) {
                findingInfo["findingID"] = (new URLSearchParams(document.location.search)).get('findingID');
                // Create document reference
                $.ajax({
                    type: "PUT",
                    url: '/SkinLesionFinding/UpdateFindingObservation',
                    data: JSON.stringify(findingInfo),
                    contentType: "application/json",
                    dataType: 'json',
                    processData: false,
                    success: function (response) {
                        console.log(response);
                        alert("Finding updated!");
                        window.opener.showFindingID(@Json.Serialize(@ViewBag.annotationnum), response.id);
                        window.close();
                    },
                    error: function (error) {
                        alert("Update finding error: " + error);
                    }
                });
            }
            else {
                // Create document reference
                $.ajax({
                    type: "POST",
                    url: '/SkinLesionFinding/UploadFindingObservation',
                    data: JSON.stringify(findingInfo),
                    contentType: "application/json",
                    dataType: 'json',
                    processData: false,
                    success: function (response) {
                        console.log(response);
                        alert("Finding uploaded!");
                        window.opener.showFindingID(@Json.Serialize(@ViewBag.annotationnum), response.id);
                        window.close();
                    },
                    error: function (error) {
                        alert("Upload finding error: " + error);
                    }
                });
            }
        }
        function alertfunc(message, type) {
            var alertPlaceholder = document.getElementById('liveAlertPlaceholder');
            var wrapper = document.createElement('div');
            wrapper.innerHTML = '<div class="alert alert-' + type + ' alert-dismissible fade show center-block" role="alert" style="width:40%;margin: auto;text-align: center;position:absolute;left:0;right:0;">' + message + '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" style="margin: auto;"></button></div>';

            alertPlaceholder.append(wrapper);
        }
        
    </script>
</body>
</html>
